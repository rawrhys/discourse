@tailwind base;
@tailwind components;
@tailwind utilities;

::-webkit-scrollbar {
  width: 5px;
  height: 5px;
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

::-webkit-scrollbar-thumb {
  border-radius: 25px;
  transition: all 0.3s;
  background-color: rgba(106, 115, 125, 0.2);
  &:hover {
    background-color: rgba(106, 115, 125, 0.27);
  }
}

::-webkit-scrollbar-corner {
  display: none;
}

/* Custom animations */
@keyframes progress {
  0% {
    width: 5%;
  }
  25% {
    width: 30%;
  }
  50% {
    width: 60%;
  }
  75% {
    width: 85%;
  }
  100% {
    width: 95%;
  }
}

.animate-progress {
  animation: progress 3s ease-in-out infinite;
}

/* Enhanced prose styles for content rendering */
.prose pre {
  background-color: #f3f4f6;
  border-radius: 0.375rem;
  padding: 1rem;
  overflow-x: auto;
}

.prose code {
  background-color: #f3f4f6;
  border-radius: 0.25rem;
  padding: 0.125rem 0.25rem;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

.prose img {
  border-radius: 0.375rem;
  margin: 1.5rem auto;
  max-width: 100%;
  height: auto;
  display: block;
}

.prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
  color: #1f2937;
  margin-top: 1.5rem;
  margin-bottom: 0.75rem;
}

.prose ul, .prose ol {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
  padding-left: 1.5rem;
}

/* Flashcard Styles */
.perspective {
  perspective: 1000px;
}
.transform-style-preserve-3d {
  transform-style: preserve-3d;
}
.rotate-y-180 {
  transform: rotateY(180deg);
}
.backface-hidden {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden; /* Safari */
}

.flashcard-front, .flashcard-back {
  display: flex;
  flex-direction: column; /* Align content vertically */
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 1rem;
  box-sizing: border-box; /* Ensure padding doesn't overflow */
  overflow-wrap: break-word; /* Break long words to prevent overflow */
  word-break: break-word; /* Ensure words break to fit */
  width: 100%; /* Ensure they take full width of their container */
  height: 100%; /* Ensure they take full height of their container */
  min-height: 150px; /* Example: give a minimum height */
  overflow-y: auto; /* Allow vertical scrolling if content overflows */
}

.flashcard-front p, .flashcard-back p { /* Target markdown generated paragraphs */
  margin: 0; /* Remove default margins if ReactMarkdown adds them */
}
